## Circular Reference ##

### Problem ###
circular reference error at 167. Code Login with Google.

### Solution ###
#  There was a circular reference error at 167. Code Login with Google. Solved by setting the
# "main: allow-circular-references:" property value to true in the application.yml file.
# Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove
# the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting
# spring.main.allow-circular-references to true.


## SMTP/Email Settings ##
### Problem
I kept getting smtp errors sending verification emails

### Solution
The author did not set a particular mailProperties in the Utility class. See the solution given by a student in the comment section below:

public class Utility {
	public static String getSiteURL(HttpServletRequest request) {
		String siteURL = request.getRequestURL().toString();

		return siteURL.replace(request.getServletPath(), "");
	}

	public static JavaMailSenderImpl prepareMailSender(EmailSettingBag settings) {
		JavaMailSenderImpl mailSender = new JavaMailSenderImpl();

		mailSender.setHost(settings.getHost());
		mailSender.setPort(settings.getPort());
		mailSender.setUsername(settings.getUsername());
		mailSender.setPassword(settings.getPassword());

		Properties mailProperties = new Properties();
		mailProperties.setProperty("mail.smtp.auth", settings.getSmtpAuth());
		mailProperties.setProperty("mail.smtp.starttls.enable", settings.getSmtpSecured());

		// the line of code below (line 30)was not in the course. It was a solution to email error suggested by a student
		// MAIL_PORT was also changed from 587 in the course to 465 suggested by student

		mailProperties.setProperty("mail.smtp.ssl.enable", "true");  // added by a student

		mailSender.setJavaMailProperties(mailProperties);

		return mailSender;
	}
}

## Search Order CLassCastException ##
### Problem ###
## Code order listing for customer - video 235
A ClassCastException (cannot convert string to enum) kept occuring because the order repository had a custom query that required a search keyword, and an order status of
enum type. See query below:

@Query("SELECT DISTINCT o FROM Order o JOIN o.orderDetails od JOIN od.product p "
            + "WHERE o.customer.id = ?2 "
            + "AND (p.name LIKE %?1% OR o.status LIKE %?1%))")
    public Page<Order> findAll(String keyword, Integer customerId, Pageable pageable);

### Solution
Non found yet

# Legacy Order Time
### Problem
Due to the time the course was created, the order time was returning null orders based on current date. I had to
modify the order time colum in MySQL by 770 days using the SQL query code below:

UPDATE orders set order_time = adddate(order_time, 770) where id > 0;
UPDATE orders set deliver_date = date_format(adddate(order_time, deliver_days + 1), '%Y-%m-%d') where id > 0;


# Inconsistent Data in Database

### Problem
There were issues in the database data that made the amount in the sales report chart inconsistent.

### Solution
The author solve the running the SQL code below:

#Order_Details Table:
update order_details set subtotal = unit_price * quantity where id > 0;

update order_details set product_cost = unit_price * 0.8 where id > 0;

#Order table
update orders o set o.subtotal = (select sum(d.subtotal) from order_details d where d.order_id=o.id) where o.id > 0;

update orders o set o.product_cost = (select sum(d.product_cost * quantity) from order_details d where d.order_id=o.id) where o.id > 0;

update orders o set o.shipping_cost = (select sum(d.shipping_cost) from order_details d where d.order_id=o.id) where o.id > 0;

update orders set total = subtotal + tax + shipping_cost where id > 0;

NOTE:
To insert fresh data into an existing sql table that has a foreign key relationship without altering the table structure,
do the following:
1. set foreign_key_checks = 0;
2. truncate table orders;
3. INSERT INTO orders VALUES(1, 'f_name', 'l_name', 'etc');
4. set foreign_key_checks = 1;

## WebSecurityConfig ##
### Problem
A user with role of an assistant was unable to view products details page even though access to the endpoint had been
granted. see security config below:
  .requestMatchers("/products/detail/**", "/customers/detail/**").hasAnyAuthority("Admin", "Editor", "Salesperson", "Assistant")

### Solution ###
Non found yet.

## Average_Rating Column in Products Table ##
### Problem
I had an issue deriving the average_rating value in the products table from the reviews table when a product has not been
reviewed. See the sql query below:
    @Query("Update Product p SET p.averageRating = COALESCE((SELECT AVG(r.rating) FROM Review r WHERE r.product.id = ?1), 0),"
            + " p.reviewCount = (SELECT COUNT(r.id) FROM Review r WHERE r.product.id =?1) "
            + "WHERE p.id = ?1")
    @Modifying
    public void updateReviewCountAndAverageRating(Integer productId);

### Solution ###
I change the data type of the average rating field in the products class and products table from float to double.

## MYSQL FULLTEXT INDEX MATCHING ##
### Problem
I was unable to search for product on the customer page. See the query and error below.
Query:
	@Query(value = "SELECT * FROM products WHERE enabled = true AND "
			+ "MATCH(name, short_description, full_description) AGAINST (?1)",
			nativeQuery = true)
	public Page<Product> search(String keyword, Pageable pageable);
Error:
    java.sql.SQLException: Can't find FULLTEXT index matching the column list

### Solution ###
The error was as a result of using the "MATCH" function in my SQL query without configuring full text index on the
columns I wanted to search from. I was able to fix the issue by using the Alter table commend below:
    ALTER TABLE `myshopdb`.`products`
    DROP INDEX `full_text_index` ,
    ADD FULLTEXT INDEX `full_text_index` (`name`, `short_description`, `full_description`) VISIBLE;
;

## Fragment URL Identifier ##
### Problem
Page not available. The author define uri in the product class that was used in the product details view in the form
of a fragment url as seen below:
Product Class:
  public String getURI() {
        return "/p/" + this.alias + "/";
    }
Product View Page:
    <a th:href="@{${product.URI} + '#review'}">

### Solution ###
The solution to why the page was not available in the view layer was addressed by correcting the wrong URI format used
by the author in the product class. See the correct format below:
Product Class:
  public String getURI() {
        return "/p/" + this.alias;
    }